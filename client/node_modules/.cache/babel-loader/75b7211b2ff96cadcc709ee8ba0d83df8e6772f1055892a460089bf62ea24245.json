{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\n// import userReducer from \"./userRedux\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n\n// const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n\n// export let persistor = persistStore(store);\n\nexport default configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});","map":{"version":3,"names":["configureStore","combineReducers","cartReducer","reducer","cart"],"sources":["C:/SV/Project/CD2/shop/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\n// import userReducer from \"./userRedux\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   version: 1,\r\n//   storage,\r\n// };\r\n\r\n// const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: persistedReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// export let persistor = persistStore(store);\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        cart: cartReducer\r\n    }\r\n})"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAeF,cAAc,CAAC;EAC1BG,OAAO,EAAE;IACLC,IAAI,EAAEF;EACV;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}